package test;

import java.util.Stack;

public class Interview {

	// Add any helper functions you may need here
	static int[] getLeftNextGreater(int[] arr) {
		Stack<Integer> stack = new Stack<>();
		int[] left = new int[arr.length];
		for (int i = 0; i < arr.length; i++) {

			if (i == 0) {
				stack.push(i);
				left[i] = -1;
			} else {
				while (!stack.isEmpty() && arr[stack.peek()] <= arr[i]) {
					stack.pop();
				}
				if (stack.isEmpty()) {
					left[i] = -1;
				} else {
					stack.push(i);
					left[i] = stack.peek();
				}
			}

		}
		return left;

	}

	static int[] getRightNextGreater(int[] arr) {
		Stack<Integer> stack = new Stack<>();
		int[] right = new int[arr.length];
		for (int i = arr.length - 1; i >= 0; i--) {

			if (i == arr.length - 1) {
				stack.push(i);
				right[i] = -1;
			} else {
				while (!stack.isEmpty() && arr[stack.peek()] <= arr[i]) {
					stack.pop();
				}
				if (stack.isEmpty()) {
					right[i] = -1;
				} else {
					stack.push(i);
					right[i] = stack.peek();
				}
			}

		}
		return right;

	}

	static int[] countSubarrays(int[] arr) {
		// Write your code here
		int[] left = getLeftNextGreater(arr);
		int[] right = getRightNextGreater(arr);
		for (int i = 0; i < arr.length; i++) {
			left[i] = right[i] + left[i];
		}
		return left;
	}
	
	public static void main(String[] args) {
		System.out.println(countSubarrays(new int[] {3, 4, 1, 6, 2}));
	}

}
