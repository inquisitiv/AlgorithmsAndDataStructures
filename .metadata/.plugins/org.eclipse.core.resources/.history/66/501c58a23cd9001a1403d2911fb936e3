package problems.dynamicProgramming.aditya;

import java.util.Arrays;

public class KnapsackDP {

	public static int[][] t;

	public static void main(String[] args) {
		int[] w = new int[] {1,2,3,4,5,6,1,2,3,4};
	    int[] val = new int[] {10,20,30,40,50,5,15,35,45,55};
	    int wt =10000;
	    int n = 10;
		t = new int[n + 1][wt + 1];
		long start = System.currentTimeMillis();
		System.out.println(knapsack(w, val, wt, n));
		System.out.println(System.currentTimeMillis()-start);

	}
	public static int knapsack(int[] w, int[] val, int wt, int n) {
	
		//Initialization for base condition
		for(int i=0;i<n+1;i++) {
			t[i][0] = 0;
		}
		for(int j=0;j<wt+1;j++) {
			t[0][j] = 0;
		}
		
		// top-down dp
		
		
	
	
	}
	
	
}
