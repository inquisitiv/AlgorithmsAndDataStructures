package problems.dynamicProgramming.aditya;

class KnapsackRecursive {

    public static void main(String args[]) {
       
      int[] w = new int[] {1,2,3,4,5,6};
      int[] val = new int[] {10,20,30,40,50};
      int wt =100;
      int n = 5;
      System.out.println(knapsack(w,val,wt,n));
    }

    public static int knapsack(int[] w, int[] val, int wt, int n) {
       
      if(n==0 || wt==0) {
        return 0;
      } 

      if(w[n-1]<=wt) {

        Math.max(val[n-1]+knapsack(w,val,wt-w[n-1],n-1),knapsack(w,val,wt,n-1))

      } else {

        return knapsack(w,val,wt,n-1)
      } 

                    
    }

}