package algorithms.trees;

import entities.Node;

public class SeperateLinkedList {

	public static void main(String[] args) {
		Node head = new Node();
		head.data = 0;
		Node temp = head;
		temp.right = new Node(1);
		temp = temp.right;
		temp.right = new Node(2);
		temp = temp.right;
		temp.right = new Node(3);
		temp = temp.right;
		temp.right = new Node(4);
		temp = temp.right;
		temp.right = new Node(5);
		temp = temp.right;
		temp.right = new Node(6);
		temp = temp.right;
		temp.right = new Node(7);
		seperateEvenOdds(temp);
		
		
		
		
	}
	public static void seperateEvenOdds(Node head) {
		// TODO Auto-generated method stub
		  
        Node even=null;
        Node evenPtr=null;
        Node odd=null;
        Node oddPtr=null;
        Node temp=null;
        
        temp = head;
        if(temp==null){
          return;
        }
	 if(temp.data%2!=0) {
          oddPtr = temp;
          temp = temp.right;  
        } else {
          even = temp;
          evenPtr = temp;
          temp = temp.right;  
        }
        
        while(temp.data!=0){
           if(temp.data%2!=0) {
             Node x = temp;
             temp = temp.right;
             odd = x;
             odd.right = oddPtr;
             oddPtr = odd;      
           } else {
             Node x = temp;
             temp = temp.right;
             if(even==null) {
            	 even = x;
                 evenPtr = even;
             }else {
             evenPtr.right = x;
             evenPtr = evenPtr.right;
             }
           }
        }
        print(even);
        print(odd);
		
	}
	public static void print(Node head) {
		while(head!=null) {
			System.out.print(head.data+"->");
		}
		System.out.println();
	}
	
	
	
}
