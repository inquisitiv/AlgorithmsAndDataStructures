package problems.dynamicProgramming.aditya;

public class MinSubsetSumDiff {
	
	public static boolean[][] t;

	public static void main(String[] args) {
		
	   	int[] arr = new int[] {};
	   	long sum = 0;
	   	for (int i = 0; i < arr.length; i++) {
			sum = sum + arr[i];
		}
	   	int sumfinal = (int)(sum/2);
	   	t = new boolean[arr.length+1][sumfinal+1];
	   	System.out.println(knapsack(arr,sumfinal,arr.length));
	}
	
	public static int knapsack(int[] arr, int sumfinal,int n) {
	
		for (int i = 0; i < n+1; i++) {
			t[i][0] = true;
		}
		for (int i = 0; i < sumfinal+1; i++) {
			sum = sum + arr[i];
		}
		
		
	}
	
}
